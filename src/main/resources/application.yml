server:
  port: 8007

spring:
  application:
    name: Management Service Application
  data:
    mongodb:
      database: service
      authentication-database: admin
      uri: mongodb://administrador:StRoNgP%40ssWorD@host.docker.internal:27017/user?authSource=admin

  kafka:
    consumer:
      group-id: service-consumer
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        specific.avro.reader: true
    properties:
      bootstrap.servers: localhost:9092
      schema.registry.url: http://localhost:8081

topic:
  name: service-topic
  partitions-num: 3
  replication-factor: 1

security:
  oauth2:
    resource:
      id: resource-server-rest-api

eureka:
  instance:
    hostname: localhost
    port: 8002
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
  server:
    wait-time-in-ms-when-sync-empty: 3000

management:
  endpoints:
    web:
      exposure:
        include: "*"

feign:
  client:
    config:
      default:
        connectTimeout: 160000000
        readTimeout: 160000000